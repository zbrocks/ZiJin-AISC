document.addEventListener('DOMContentLoaded',()=>{const e=[];let t={},s={};function n(e){const n=document.getElementById('scoreboard-body'),a=document.querySelector('.scoreboard-mobile-view');if(!n)return;if(!a){const e=document.createElement('div');e.className='scoreboard-mobile-view',n.parentNode.insertBefore(e,n.nextSibling)}if(0===e.length){n.innerHTML='\n                <tr>\n                    <td colspan="5" class="no-results">\n                        <i class="fas fa-search"></i> 您期待的选手还在路上\n                    </td>\n                </tr>\n            ';const e=document.querySelector('.scoreboard-mobile-view');return void(e&&(e.innerHTML='\n                    <div class="no-results">\n                        <i class="fas fa-search"></i> 您期待的选手还在路上\n                    </div>\n                '))}n.innerHTML=e.map(e=>`\n            <tr>\n                <td>${e.id}</td>\n                <td>${e.team}</td>\n                <td>${e.time}</td>\n                <td>\n                    <span class="status-badge ${s[e.status]}">\n                        ${t[e.status]}\n                    </span>\n                </td>\n                <td class="score-value">${e.score}</td>\n            </tr>\n        `).join('');const o=document.querySelector('.scoreboard-mobile-view');o&&(o.innerHTML=e.map(e=>`\n                <div class="mobile-player-card">\n                    <div class="mobile-player-row">\n                        <span class="mobile-label">选手ID</span>\n                        <span class="mobile-value">${e.id}</span>\n                    </div>\n                    <div class="mobile-player-row">\n                        <span class="mobile-label">所属队伍</span>\n                        <span class="mobile-value">${e.team}</span>\n                    </div>\n                    <div class="mobile-player-row">\n                        <span class="mobile-label">比赛时间</span>\n                        <span class="mobile-value">${e.time}</span>\n                    </div>\n                    <div class="mobile-player-row">\n                        <span class="mobile-label">比赛状态</span>\n                        <span class="mobile-value">\n                            <span class="status-badge ${s[e.status]}">\n                                ${t[e.status]}\n                            </span>\n                        </span>\n                    </div>\n                    <div class="mobile-player-row">\n                        <span class="mobile-label">最终得分</span>\n                        <span class="mobile-value score">${e.score}</span>\n                    </div>\n                </div>\n            `).join(''))}function a(){const t=document.getElementById('statusFilter')?.value||'all',s=document.getElementById('playerFilter')?.value.toLowerCase()||'',a=document.getElementById('teamFilter')?.value.toLowerCase()||'';n(e.filter(e=>('all'===t||e.status===t)&&(!(s&&!e.id.toLowerCase().includes(s))&&!(a&&!e.team.toLowerCase().includes(a)))))}let o={column:'id',direction:'asc'};!function(){const e=document.querySelectorAll('.carousel-item'),t=document.querySelectorAll('.carousel-indicator');if(!e.length)return;let s,n=0;function a(s){e.forEach(e=>e.classList.remove('active')),t.forEach(e=>e.classList.remove('active')),e[s].classList.add('active'),t[s].classList.add('active'),n=s}function o(){a((n+1)%e.length)}function c(){s=setInterval(o,5e3)}t.forEach((e,t)=>{e.addEventListener('click',()=>{clearInterval(s),a(t),c()})}),c()}(),async function(){document.getElementById('scoreboard-body')&&(await async function(){try{const e=await fetch('/assets/json/status-config.json');if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const n=await e.json();t=n.statusMap,s=n.statusClassMap}catch(e){}}(),document.getElementById('statusFilter')?.addEventListener('change',a),document.getElementById('playerFilter')?.addEventListener('input',a),document.getElementById('teamFilter')?.addEventListener('input',a),document.querySelectorAll('.scoreboard-table th[data-sort]').forEach(t=>{t.addEventListener('click',()=>{!function(t){o.column===t?o.direction='asc'===o.direction?'desc':'asc':(o.column=t,o.direction='asc'),document.querySelectorAll('.scoreboard-table th').forEach(e=>{e.classList.remove('sorted-asc','sorted-desc')});const s=document.querySelector(`.scoreboard-table th[data-sort="${o.column}"]`);s&&s.classList.add('asc'===o.direction?'sorted-asc':'sorted-desc'),n([...e].sort((e,t)=>{let s=e[o.column],n=t[o.column];return'score'===o.column&&(s='-'===e.score?-1:e.score,n='-'===t.score?-1:t.score),s<n?'asc'===o.direction?-1:1:s>n?'asc'===o.direction?1:-1:0}))}(t.getAttribute('data-sort'))})}),n(e))}()});